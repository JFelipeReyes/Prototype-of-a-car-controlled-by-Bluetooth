

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 24 21:54:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 30/04/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F15244 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  010C                     	;# 
    82  010D                     	;# 
    83  0119                     	;# 
    84  011A                     	;# 
    85  011B                     	;# 
    86  011B                     	;# 
    87  011C                     	;# 
    88  011D                     	;# 
    89  011E                     	;# 
    90  011F                     	;# 
    91  018C                     	;# 
    92  018D                     	;# 
    93  018E                     	;# 
    94  018F                     	;# 
    95  0190                     	;# 
    96  0191                     	;# 
    97  0192                     	;# 
    98  020C                     	;# 
    99  020D                     	;# 
   100  020E                     	;# 
   101  020E                     	;# 
   102  020F                     	;# 
   103  020F                     	;# 
   104  0210                     	;# 
   105  0210                     	;# 
   106  0211                     	;# 
   107  0211                     	;# 
   108  028C                     	;# 
   109  028C                     	;# 
   110  028D                     	;# 
   111  028D                     	;# 
   112  028E                     	;# 
   113  028F                     	;# 
   114  0290                     	;# 
   115  0291                     	;# 
   116  030C                     	;# 
   117  030C                     	;# 
   118  030D                     	;# 
   119  030E                     	;# 
   120  030F                     	;# 
   121  0310                     	;# 
   122  0310                     	;# 
   123  0311                     	;# 
   124  0312                     	;# 
   125  0313                     	;# 
   126  0314                     	;# 
   127  0314                     	;# 
   128  0315                     	;# 
   129  0316                     	;# 
   130  0318                     	;# 
   131  0318                     	;# 
   132  0319                     	;# 
   133  031A                     	;# 
   134  059C                     	;# 
   135  059C                     	;# 
   136  059D                     	;# 
   137  059D                     	;# 
   138  059E                     	;# 
   139  059F                     	;# 
   140  070C                     	;# 
   141  070D                     	;# 
   142  070E                     	;# 
   143  0716                     	;# 
   144  0717                     	;# 
   145  0718                     	;# 
   146  080C                     	;# 
   147  0811                     	;# 
   148  0813                     	;# 
   149  0814                     	;# 
   150  081A                     	;# 
   151  081A                     	;# 
   152  081B                     	;# 
   153  081C                     	;# 
   154  081C                     	;# 
   155  081D                     	;# 
   156  081E                     	;# 
   157  081F                     	;# 
   158  088E                     	;# 
   159  0890                     	;# 
   160  0891                     	;# 
   161  0892                     	;# 
   162  0893                     	;# 
   163  090C                     	;# 
   164  1E8F                     	;# 
   165  1E90                     	;# 
   166  1E91                     	;# 
   167  1E92                     	;# 
   168  1E93                     	;# 
   169  1E9C                     	;# 
   170  1EA1                     	;# 
   171  1EA2                     	;# 
   172  1EC3                     	;# 
   173  1EC5                     	;# 
   174  1EC6                     	;# 
   175  1EC7                     	;# 
   176  1ECB                     	;# 
   177  1ECB                     	;# 
   178  1ECB                     	;# 
   179  1ECC                     	;# 
   180  1ECC                     	;# 
   181  1ECC                     	;# 
   182  1F10                     	;# 
   183  1F11                     	;# 
   184  1F12                     	;# 
   185  1F14                     	;# 
   186  1F15                     	;# 
   187  1F1C                     	;# 
   188  1F1D                     	;# 
   189  1F1E                     	;# 
   190  1F1F                     	;# 
   191  1F20                     	;# 
   192  1F21                     	;# 
   193  1F22                     	;# 
   194  1F23                     	;# 
   195  1F24                     	;# 
   196  1F25                     	;# 
   197  1F26                     	;# 
   198  1F27                     	;# 
   199  1F38                     	;# 
   200  1F39                     	;# 
   201  1F3A                     	;# 
   202  1F3B                     	;# 
   203  1F3C                     	;# 
   204  1F3D                     	;# 
   205  1F3E                     	;# 
   206  1F3F                     	;# 
   207  1F43                     	;# 
   208  1F44                     	;# 
   209  1F45                     	;# 
   210  1F46                     	;# 
   211  1F47                     	;# 
   212  1F48                     	;# 
   213  1F49                     	;# 
   214  1F4A                     	;# 
   215  1F4E                     	;# 
   216  1F4F                     	;# 
   217  1F50                     	;# 
   218  1F51                     	;# 
   219  1F52                     	;# 
   220  1F53                     	;# 
   221  1F54                     	;# 
   222  1F55                     	;# 
   223  1FE4                     	;# 
   224  1FE5                     	;# 
   225  1FE6                     	;# 
   226  1FE7                     	;# 
   227  1FE8                     	;# 
   228  1FE8                     	;# 
   229  1FE9                     	;# 
   230  1FEA                     	;# 
   231  1FEB                     	;# 
   232  1FED                     	;# 
   233  1FEE                     	;# 
   234  1FEF                     	;# 
   235                           
   236                           	psect	idataCOMMON
   237  06C1                     __pidataCOMMON:
   238                           
   239                           ;initializer for _dutyCycle100
   240  06C1  3464               	retlw	100
   241  06C2  3400               	retlw	0
   242                           
   243                           ;initializer for _dutyCycle75
   244  06C3  344B               	retlw	75
   245  06C4  3400               	retlw	0
   246                           
   247                           ;initializer for _dutyCycle50
   248  06C5  3432               	retlw	50
   249  06C6  3400               	retlw	0
   250  000E                     _PORTCbits	set	14
   251  000D                     _PORTBbits	set	13
   252  0013                     _TRISBbits	set	19
   253  001A                     _LATC	set	26
   254  0019                     _LATB	set	25
   255  0018                     _LATA	set	24
   256  0014                     _TRISCbits	set	20
   257  011B                     _SP1BRG	set	283
   258  011A                     _TX1REG	set	282
   259  0119                     _RC1REG	set	281
   260  011D                     _RC1STAbits	set	285
   261  011E                     _TX1STAbits	set	286
   262  028E                     _T2CON	set	654
   263  028C                     _T2TMR	set	652
   264  028D                     _T2PR	set	653
   265  0291                     _T2RST	set	657
   266  028F                     _T2HLT	set	655
   267  0290                     _T2CLKCON	set	656
   268  0318                     _PWM4DCL	set	792
   269  0319                     _PWM4DCH	set	793
   270  031A                     _PWM4CON	set	794
   271  070D                     _PIR1bits	set	1805
   272  0892                     _OSCTUNE	set	2194
   273  0893                     _OSCFRQ	set	2195
   274  0891                     _OSCEN	set	2193
   275                           
   276                           	psect	cinit
   277  07ED                     start_initialization:	
   278                           ; #config settings
   279                           
   280  07ED                     __initialization:
   281                           
   282                           ; Initialize objects allocated to COMMON
   283  07ED  30C1               	movlw	low __pidataCOMMON
   284  07EE  0084               	movwf	4
   285  07EF  3086               	movlw	(high __pidataCOMMON)| (0+128)
   286  07F0  0085               	movwf	5
   287  07F1  0012               	moviw fsr0++
   288  07F2  00F0               	movwf	__pdataCOMMON& (0+127)
   289  07F3  0012               	moviw fsr0++
   290  07F4  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   291  07F5  0012               	moviw fsr0++
   292  07F6  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   293  07F7  0012               	moviw fsr0++
   294  07F8  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   295  07F9  0012               	moviw fsr0++
   296  07FA  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   297  07FB  0012               	moviw fsr0++
   298  07FC  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   299  07FD                     end_of_initialization:	
   300                           ;End of C runtime variable initialization code
   301                           
   302  07FD                     __end_of__initialization:
   303  07FD  0140               	movlb	0
   304  07FE  3187  2F18         	ljmp	_main	;jump to C main() function
   305                           
   306                           	psect	dataCOMMON
   307  0070                     __pdataCOMMON:
   308  0070                     _dutyCycle100:
   309  0070                     	ds	2
   310  0072                     _dutyCycle75:
   311  0072                     	ds	2
   312  0074                     _dutyCycle50:
   313  0074                     	ds	2
   314                           
   315                           	psect	cstackCOMMON
   316  0076                     __pcstackCOMMON:
   317  0076                     ?_UART_init:
   318  0076                     ??_UART_init:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0076                     ?_UART_read:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0076                     ??_UART_read:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0076                     ?_PIN_MANAGER_Initialize:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0076                     ??_PIN_MANAGER_Initialize:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0076                     ?_OSCILLATOR_Initialize:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0076                     ??_OSCILLATOR_Initialize:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0076                     ?_TMR2_Initialize:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0076                     ??_TMR2_Initialize:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0076                     ?_PWM4_Initialize:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0076                     ??_PWM4_Initialize:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0076                     ?_PWM4_LoadDutyValue:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0076                     ?_main:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0076                     PWM4_LoadDutyValue@dutyValue:	
   358                           ; 1 bytes @ 0x0
   359                           
   360                           
   361                           ; 2 bytes @ 0x0
   362  0076                     	ds	2
   363  0078                     ??_PWM4_LoadDutyValue:
   364                           
   365                           ; 1 bytes @ 0x2
   366  0078                     	ds	2
   367  007A                     ??_main:
   368                           
   369                           ; 1 bytes @ 0x4
   370  007A                     	ds	1
   371  007B                     main@dato_rx:
   372                           
   373                           ; 1 bytes @ 0x5
   374  007B                     	ds	1
   375                           
   376                           	psect	maintext
   377  0718                     __pmaintext:	
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 103 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  dato_rx         1    5[COMMON] unsigned char 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : B3F/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   397 ;;      Params:         0       0       0       0       0       0       0       0
   398 ;;      Locals:         1       0       0       0       0       0       0       0
   399 ;;      Temps:          1       0       0       0       0       0       0       0
   400 ;;      Totals:         2       0       0       0       0       0       0       0
   401 ;;Total ram usage:        2 bytes
   402 ;; Hardware stack levels required when called: 1
   403 ;; This function calls:
   404 ;;		_OSCILLATOR_Initialize
   405 ;;		_PIN_MANAGER_Initialize
   406 ;;		_PWM4_Initialize
   407 ;;		_PWM4_LoadDutyValue
   408 ;;		_TMR2_Initialize
   409 ;;		_UART_init
   410 ;;		_UART_read
   411 ;; This function is called by:
   412 ;;		Startup code after reset
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           
   417                           ;psect for function _main
   418  0718                     _main:
   419  0718                     l850:	
   420                           ;incstack = 0
   421                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   422                           
   423                           
   424                           ;main.c: 105:     PIN_MANAGER_Initialize();
   425  0718  3186  26D9  3187   	fcall	_PIN_MANAGER_Initialize
   426                           
   427                           ;main.c: 106:     OSCILLATOR_Initialize();
   428  071B  3186  26BC  3187   	fcall	_OSCILLATOR_Initialize
   429  071E                     l852:
   430                           
   431                           ;main.c: 107:     TMR2_Initialize();
   432  071E  3186  26E5  3187   	fcall	_TMR2_Initialize
   433  0721                     l854:
   434                           
   435                           ;main.c: 108:     PWM4_Initialize();
   436  0721  3186  26C7  3187   	fcall	_PWM4_Initialize
   437                           
   438                           ;main.c: 109:     UART_init();
   439  0724  3186  26F3  3187   	fcall	_UART_init
   440  0727                     l856:
   441                           
   442                           ;main.c: 115:         dato_rx = UART_read();
   443  0727  3186  26CF  3187   	fcall	_UART_read
   444  072A  00FA               	movwf	??_main
   445  072B  087A               	movf	??_main,w
   446  072C  00FB               	movwf	main@dato_rx
   447                           
   448                           ;main.c: 117:         if (dato_rx == 'A')
   449  072D  3041               	movlw	65
   450  072E  067B               	xorwf	main@dato_rx,w
   451  072F  1D03               	btfss	3,2
   452  0730  2F32               	goto	u141
   453  0731  2F33               	goto	u140
   454  0732                     u141:
   455  0732  2F43               	goto	l874
   456  0733                     u140:
   457  0733                     l858:
   458                           
   459                           ;main.c: 118:         {;main.c: 119:                 PWM4_LoadDutyValue(dutyCycle50);
   460  0733  3032               	movlw	50
   461  0734  00F6               	movwf	PWM4_LoadDutyValue@dutyValue
   462  0735  3000               	movlw	0
   463  0736  00F7               	movwf	PWM4_LoadDutyValue@dutyValue+1
   464  0737  3187  2702  3187   	fcall	_PWM4_LoadDutyValue
   465  073A                     l860:
   466                           
   467                           ;main.c: 120:                 PORTBbits.RB4 = 1;
   468  073A  0140               	movlb	0	; select bank0
   469  073B  160D               	bsf	13,4	;volatile
   470  073C                     l862:
   471                           
   472                           ;main.c: 121:                 PORTBbits.RB6 = 0;
   473  073C  130D               	bcf	13,6	;volatile
   474  073D                     l864:
   475                           
   476                           ;main.c: 122:                 PORTBbits.RB7 = 0;
   477  073D  138D               	bcf	13,7	;volatile
   478  073E                     l866:
   479                           
   480                           ;main.c: 123:                 PORTCbits.RC4 = 0;
   481  073E  120E               	bcf	14,4	;volatile
   482  073F                     l868:
   483                           
   484                           ;main.c: 124:                 PORTCbits.RC5 = 1;
   485  073F  168E               	bsf	14,5	;volatile
   486  0740                     l870:
   487                           
   488                           ;main.c: 125:                 PORTCbits.RC6 = 0;
   489  0740  130E               	bcf	14,6	;volatile
   490  0741                     l872:
   491                           
   492                           ;main.c: 126:                 PORTCbits.RC7 = 0;
   493  0741  138E               	bcf	14,7	;volatile
   494                           
   495                           ;main.c: 128:         }
   496  0742  2F27               	goto	l856
   497  0743                     l874:
   498  0743  3048               	movlw	72
   499  0744  067B               	xorwf	main@dato_rx,w
   500  0745  1D03               	btfss	3,2
   501  0746  2F48               	goto	u151
   502  0747  2F49               	goto	u150
   503  0748                     u151:
   504  0748  2F59               	goto	l892
   505  0749                     u150:
   506  0749                     l876:
   507                           
   508                           ;main.c: 131:         {;main.c: 132:                 PWM4_LoadDutyValue(dutyCycle75);
   509  0749  304B               	movlw	75
   510  074A  00F6               	movwf	PWM4_LoadDutyValue@dutyValue
   511  074B  3000               	movlw	0
   512  074C  00F7               	movwf	PWM4_LoadDutyValue@dutyValue+1
   513  074D  3187  2702  3187   	fcall	_PWM4_LoadDutyValue
   514  0750                     l878:
   515                           
   516                           ;main.c: 133:                 PORTBbits.RB4 = 1;
   517  0750  0140               	movlb	0	; select bank0
   518  0751  160D               	bsf	13,4	;volatile
   519  0752                     l880:
   520                           
   521                           ;main.c: 134:                 PORTBbits.RB6 = 0;
   522  0752  130D               	bcf	13,6	;volatile
   523  0753                     l882:
   524                           
   525                           ;main.c: 135:                 PORTBbits.RB7 = 0;
   526  0753  138D               	bcf	13,7	;volatile
   527  0754                     l884:
   528                           
   529                           ;main.c: 136:                 PORTCbits.RC4 = 0;
   530  0754  120E               	bcf	14,4	;volatile
   531  0755                     l886:
   532                           
   533                           ;main.c: 137:                 PORTCbits.RC5 = 1;
   534  0755  168E               	bsf	14,5	;volatile
   535  0756                     l888:
   536                           
   537                           ;main.c: 138:                 PORTCbits.RC6 = 0;
   538  0756  130E               	bcf	14,6	;volatile
   539  0757                     l890:
   540                           
   541                           ;main.c: 139:                 PORTCbits.RC7 = 0;
   542  0757  138E               	bcf	14,7	;volatile
   543                           
   544                           ;main.c: 141:         }
   545  0758  2F27               	goto	l856
   546  0759                     l892:
   547  0759  3049               	movlw	73
   548  075A  067B               	xorwf	main@dato_rx,w
   549  075B  1D03               	btfss	3,2
   550  075C  2F5E               	goto	u161
   551  075D  2F5F               	goto	u160
   552  075E                     u161:
   553  075E  2F6F               	goto	l910
   554  075F                     u160:
   555  075F                     l894:
   556                           
   557                           ;main.c: 144:         {;main.c: 145:                 PWM4_LoadDutyValue(dutyCycle100);
   558  075F  3064               	movlw	100
   559  0760  00F6               	movwf	PWM4_LoadDutyValue@dutyValue
   560  0761  3000               	movlw	0
   561  0762  00F7               	movwf	PWM4_LoadDutyValue@dutyValue+1
   562  0763  3187  2702  3187   	fcall	_PWM4_LoadDutyValue
   563  0766                     l896:
   564                           
   565                           ;main.c: 146:                 PORTBbits.RB4 = 1;
   566  0766  0140               	movlb	0	; select bank0
   567  0767  160D               	bsf	13,4	;volatile
   568  0768                     l898:
   569                           
   570                           ;main.c: 147:                 PORTBbits.RB6 = 0;
   571  0768  130D               	bcf	13,6	;volatile
   572  0769                     l900:
   573                           
   574                           ;main.c: 148:                 PORTBbits.RB7 = 0;
   575  0769  138D               	bcf	13,7	;volatile
   576  076A                     l902:
   577                           
   578                           ;main.c: 149:                 PORTCbits.RC4 = 0;
   579  076A  120E               	bcf	14,4	;volatile
   580  076B                     l904:
   581                           
   582                           ;main.c: 150:                 PORTCbits.RC5 = 1;
   583  076B  168E               	bsf	14,5	;volatile
   584  076C                     l906:
   585                           
   586                           ;main.c: 151:                 PORTCbits.RC6 = 0;
   587  076C  130E               	bcf	14,6	;volatile
   588  076D                     l908:
   589                           
   590                           ;main.c: 152:                 PORTCbits.RC7 = 0;
   591  076D  138E               	bcf	14,7	;volatile
   592                           
   593                           ;main.c: 154:         }
   594  076E  2F27               	goto	l856
   595  076F                     l910:
   596  076F  3045               	movlw	69
   597  0770  067B               	xorwf	main@dato_rx,w
   598  0771  1D03               	btfss	3,2
   599  0772  2F74               	goto	u171
   600  0773  2F75               	goto	u170
   601  0774                     u171:
   602  0774  2F85               	goto	l928
   603  0775                     u170:
   604  0775                     l912:
   605                           
   606                           ;main.c: 157:         {;main.c: 158:                 PWM4_LoadDutyValue(dutyCycle50);
   607  0775  3032               	movlw	50
   608  0776  00F6               	movwf	PWM4_LoadDutyValue@dutyValue
   609  0777  3000               	movlw	0
   610  0778  00F7               	movwf	PWM4_LoadDutyValue@dutyValue+1
   611  0779  3187  2702  3187   	fcall	_PWM4_LoadDutyValue
   612  077C                     l914:
   613                           
   614                           ;main.c: 159:                 PORTBbits.RB4 = 0;
   615  077C  0140               	movlb	0	; select bank0
   616  077D  120D               	bcf	13,4	;volatile
   617  077E                     l916:
   618                           
   619                           ;main.c: 160:                 PORTBbits.RB6 = 1;
   620  077E  170D               	bsf	13,6	;volatile
   621  077F                     l918:
   622                           
   623                           ;main.c: 161:                 PORTBbits.RB7 = 1;
   624  077F  178D               	bsf	13,7	;volatile
   625  0780                     l920:
   626                           
   627                           ;main.c: 162:                 PORTCbits.RC4 = 1;
   628  0780  160E               	bsf	14,4	;volatile
   629  0781                     l922:
   630                           
   631                           ;main.c: 163:                 PORTCbits.RC5 = 0;
   632  0781  128E               	bcf	14,5	;volatile
   633  0782                     l924:
   634                           
   635                           ;main.c: 164:                 PORTCbits.RC6 = 0;
   636  0782  130E               	bcf	14,6	;volatile
   637  0783                     l926:
   638                           
   639                           ;main.c: 165:                 PORTCbits.RC7 = 0;
   640  0783  138E               	bcf	14,7	;volatile
   641                           
   642                           ;main.c: 167:         }
   643  0784  2F27               	goto	l856
   644  0785                     l928:
   645  0785  3044               	movlw	68
   646  0786  067B               	xorwf	main@dato_rx,w
   647  0787  1D03               	btfss	3,2
   648  0788  2F8A               	goto	u181
   649  0789  2F8B               	goto	u180
   650  078A                     u181:
   651  078A  2F9B               	goto	l946
   652  078B                     u180:
   653  078B                     l930:
   654                           
   655                           ;main.c: 170:         {;main.c: 171:                 PWM4_LoadDutyValue(dutyCycle50);
   656  078B  3032               	movlw	50
   657  078C  00F6               	movwf	PWM4_LoadDutyValue@dutyValue
   658  078D  3000               	movlw	0
   659  078E  00F7               	movwf	PWM4_LoadDutyValue@dutyValue+1
   660  078F  3187  2702  3187   	fcall	_PWM4_LoadDutyValue
   661  0792                     l932:
   662                           
   663                           ;main.c: 172:                 PORTBbits.RB4 = 0;
   664  0792  0140               	movlb	0	; select bank0
   665  0793  120D               	bcf	13,4	;volatile
   666  0794                     l934:
   667                           
   668                           ;main.c: 173:                 PORTBbits.RB6 = 0;
   669  0794  130D               	bcf	13,6	;volatile
   670  0795                     l936:
   671                           
   672                           ;main.c: 174:                 PORTBbits.RB7 = 0;
   673  0795  138D               	bcf	13,7	;volatile
   674  0796                     l938:
   675                           
   676                           ;main.c: 175:                 PORTCbits.RC4 = 0;
   677  0796  120E               	bcf	14,4	;volatile
   678  0797                     l940:
   679                           
   680                           ;main.c: 176:                 PORTCbits.RC5 = 0;
   681  0797  128E               	bcf	14,5	;volatile
   682  0798                     l942:
   683                           
   684                           ;main.c: 177:                 PORTCbits.RC6 = 0;
   685  0798  130E               	bcf	14,6	;volatile
   686  0799                     l944:
   687                           
   688                           ;main.c: 178:                 PORTCbits.RC7 = 0;
   689  0799  138E               	bcf	14,7	;volatile
   690                           
   691                           ;main.c: 179:         }
   692  079A  2F27               	goto	l856
   693  079B                     l946:
   694  079B  3042               	movlw	66
   695  079C  067B               	xorwf	main@dato_rx,w
   696  079D  1D03               	btfss	3,2
   697  079E  2FA0               	goto	u191
   698  079F  2FA1               	goto	u190
   699  07A0                     u191:
   700  07A0  2FB1               	goto	l964
   701  07A1                     u190:
   702  07A1                     l948:
   703                           
   704                           ;main.c: 182:         {;main.c: 183:                 PWM4_LoadDutyValue(dutyCycle50);
   705  07A1  3032               	movlw	50
   706  07A2  00F6               	movwf	PWM4_LoadDutyValue@dutyValue
   707  07A3  3000               	movlw	0
   708  07A4  00F7               	movwf	PWM4_LoadDutyValue@dutyValue+1
   709  07A5  3187  2702  3187   	fcall	_PWM4_LoadDutyValue
   710  07A8                     l950:
   711                           
   712                           ;main.c: 184:                 PORTBbits.RB4 = 0;
   713  07A8  0140               	movlb	0	; select bank0
   714  07A9  120D               	bcf	13,4	;volatile
   715  07AA                     l952:
   716                           
   717                           ;main.c: 185:                 PORTBbits.RB6 = 0;
   718  07AA  130D               	bcf	13,6	;volatile
   719  07AB                     l954:
   720                           
   721                           ;main.c: 186:                 PORTBbits.RB7 = 0;
   722  07AB  138D               	bcf	13,7	;volatile
   723  07AC                     l956:
   724                           
   725                           ;main.c: 187:                 PORTCbits.RC4 = 0;
   726  07AC  120E               	bcf	14,4	;volatile
   727  07AD                     l958:
   728                           
   729                           ;main.c: 188:                 PORTCbits.RC5 = 0;
   730  07AD  128E               	bcf	14,5	;volatile
   731  07AE                     l960:
   732                           
   733                           ;main.c: 189:                 PORTCbits.RC6 = 0;
   734  07AE  130E               	bcf	14,6	;volatile
   735  07AF                     l962:
   736                           
   737                           ;main.c: 190:                 PORTCbits.RC7 = 0;
   738  07AF  138E               	bcf	14,7	;volatile
   739                           
   740                           ;main.c: 191:         }
   741  07B0  2F27               	goto	l856
   742  07B1                     l964:
   743  07B1  3030               	movlw	48
   744  07B2  067B               	xorwf	main@dato_rx,w
   745  07B3  1D03               	btfss	3,2
   746  07B4  2FB6               	goto	u201
   747  07B5  2FB7               	goto	u200
   748  07B6                     u201:
   749  07B6  2FC7               	goto	l982
   750  07B7                     u200:
   751  07B7                     l966:
   752                           
   753                           ;main.c: 194:         {;main.c: 195:                 PWM4_LoadDutyValue(dutyCycle50);
   754  07B7  3032               	movlw	50
   755  07B8  00F6               	movwf	PWM4_LoadDutyValue@dutyValue
   756  07B9  3000               	movlw	0
   757  07BA  00F7               	movwf	PWM4_LoadDutyValue@dutyValue+1
   758  07BB  3187  2702  3187   	fcall	_PWM4_LoadDutyValue
   759  07BE                     l968:
   760                           
   761                           ;main.c: 196:                 PORTBbits.RB4 = 0;
   762  07BE  0140               	movlb	0	; select bank0
   763  07BF  120D               	bcf	13,4	;volatile
   764  07C0                     l970:
   765                           
   766                           ;main.c: 197:                 PORTBbits.RB6 = 0;
   767  07C0  130D               	bcf	13,6	;volatile
   768  07C1                     l972:
   769                           
   770                           ;main.c: 198:                 PORTBbits.RB7 = 1;
   771  07C1  178D               	bsf	13,7	;volatile
   772  07C2                     l974:
   773                           
   774                           ;main.c: 199:                 PORTCbits.RC4 = 0;
   775  07C2  120E               	bcf	14,4	;volatile
   776  07C3                     l976:
   777                           
   778                           ;main.c: 200:                 PORTCbits.RC5 = 0;
   779  07C3  128E               	bcf	14,5	;volatile
   780  07C4                     l978:
   781                           
   782                           ;main.c: 201:                 PORTCbits.RC6 = 0;
   783  07C4  130E               	bcf	14,6	;volatile
   784  07C5                     l980:
   785                           
   786                           ;main.c: 202:                 PORTCbits.RC7 = 0;
   787  07C5  138E               	bcf	14,7	;volatile
   788                           
   789                           ;main.c: 203:         }
   790  07C6  2F27               	goto	l856
   791  07C7                     l982:
   792  07C7  3043               	movlw	67
   793  07C8  067B               	xorwf	main@dato_rx,w
   794  07C9  1D03               	btfss	3,2
   795  07CA  2FCC               	goto	u211
   796  07CB  2FCD               	goto	u210
   797  07CC                     u211:
   798  07CC  2FEA               	goto	l108
   799  07CD                     u210:
   800  07CD                     l984:
   801                           
   802                           ;main.c: 206:         {;main.c: 207:                 PWM4_LoadDutyValue(dutyCycle50);
   803  07CD  3032               	movlw	50
   804  07CE  00F6               	movwf	PWM4_LoadDutyValue@dutyValue
   805  07CF  3000               	movlw	0
   806  07D0  00F7               	movwf	PWM4_LoadDutyValue@dutyValue+1
   807  07D1  3187  2702  3187   	fcall	_PWM4_LoadDutyValue
   808  07D4                     l986:
   809                           
   810                           ;main.c: 208:                 PORTCbits.RC6 = 1;
   811  07D4  0140               	movlb	0	; select bank0
   812  07D5  170E               	bsf	14,6	;volatile
   813  07D6                     l988:
   814                           
   815                           ;main.c: 209:                 PORTCbits.RC7 = 1;
   816  07D6  178E               	bsf	14,7	;volatile
   817  07D7                     l990:
   818                           
   819                           ;main.c: 210:                 _delay((unsigned long)((500)*(1000000/4000.0)));
   820  07D7  30A3               	movlw	163
   821  07D8  00FA               	movwf	??_main
   822  07D9  3055               	movlw	85
   823  07DA                     u227:
   824  07DA  0B89               	decfsz	9,f
   825  07DB  2FDA               	goto	u227
   826  07DC  0BFA               	decfsz	??_main,f
   827  07DD  2FDA               	goto	u227
   828  07DE  0000               	nop
   829  07DF                     l992:
   830                           
   831                           ;main.c: 211:                 PORTCbits.RC6 = 0;
   832  07DF  0140               	movlb	0	; select bank0
   833  07E0  130E               	bcf	14,6	;volatile
   834  07E1                     l994:
   835                           
   836                           ;main.c: 212:                 PORTCbits.RC7 = 0;
   837  07E1  138E               	bcf	14,7	;volatile
   838  07E2                     l996:
   839                           
   840                           ;main.c: 213:                 _delay((unsigned long)((300)*(1000000/4000.0)));
   841  07E2  3062               	movlw	98
   842  07E3  00FA               	movwf	??_main
   843  07E4  3066               	movlw	102
   844  07E5                     u237:
   845  07E5  0B89               	decfsz	9,f
   846  07E6  2FE5               	goto	u237
   847  07E7  0BFA               	decfsz	??_main,f
   848  07E8  2FE5               	goto	u237
   849  07E9  2F27               	goto	l856
   850  07EA                     l108:
   851  07EA  2F27               	goto	l856
   852  07EB  3180  2802         	ljmp	start
   853  07ED                     __end_of_main:
   854                           
   855                           	psect	text1
   856  06CF                     __ptext1:	
   857 ;; *************** function _UART_read *****************
   858 ;; Defined at:
   859 ;;		line 15 in file "./UART.h"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      unsigned char 
   866 ;; Registers used:
   867 ;;		wreg
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   873 ;;      Params:         0       0       0       0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0
   876 ;;      Totals:         0       0       0       0       0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           
   887                           ;psect for function _UART_read
   888  06CF                     _UART_read:
   889  06CF                     l644:	
   890                           ;incstack = 0
   891                           ; Regs used in _UART_read: [wreg]
   892                           
   893                           
   894                           ;./UART.h: 17:     if (PIR1bits.RC1IF == 1)
   895  06CF  014E               	movlb	14	; select bank14
   896  06D0  1E0D               	btfss	13,4	;volatile
   897  06D1  2ED3               	goto	u11
   898  06D2  2ED4               	goto	u10
   899  06D3                     u11:
   900  06D3  2ED7               	goto	l652
   901  06D4                     u10:
   902  06D4                     l646:
   903                           
   904                           ;./UART.h: 18:         return RC1REG;
   905  06D4  0142               	movlb	2	; select bank2
   906  06D5  0819               	movf	25,w	;volatile
   907  06D6  2ED8               	goto	l59
   908  06D7                     l652:
   909                           
   910                           ;./UART.h: 20:         return 0;
   911  06D7  3000               	movlw	0
   912  06D8                     l59:
   913  06D8  0008               	return
   914  06D9                     __end_of_UART_read:
   915                           
   916                           	psect	text2
   917  06F3                     __ptext2:	
   918 ;; *************** function _UART_init *****************
   919 ;; Defined at:
   920 ;;		line 1 in file "./UART.h"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		None
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   934 ;;      Params:         0       0       0       0       0       0       0       0
   935 ;;      Locals:         0       0       0       0       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0       0
   937 ;;      Totals:         0       0       0       0       0       0       0       0
   938 ;;Total ram usage:        0 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _UART_init
   949  06F3                     _UART_init:
   950  06F3                     l642:	
   951                           ;incstack = 0
   952                           ; Regs used in _UART_init: []
   953                           
   954                           
   955                           ;./UART.h: 3:     TRISCbits.TRISC1 = 1;
   956  06F3  0140               	movlb	0	; select bank0
   957  06F4  1494               	bsf	20,1	;volatile
   958                           
   959                           ;./UART.h: 4:     TRISCbits.TRISC0 = 0;
   960  06F5  1014               	bcf	20,0	;volatile
   961                           
   962                           ;./UART.h: 6:     TX1STAbits.SYNC = 0;
   963  06F6  0142               	movlb	2	; select bank2
   964  06F7  121E               	bcf	30,4	;volatile
   965                           
   966                           ;./UART.h: 7:     TX1STAbits.TX9 = 0;
   967  06F8  131E               	bcf	30,6	;volatile
   968                           
   969                           ;./UART.h: 8:     TX1STAbits.BRGH = 1;
   970  06F9  151E               	bsf	30,2	;volatile
   971                           
   972                           ;./UART.h: 9:     SP1BRG = 129;
   973  06FA  3000               	movlw	0
   974  06FB  009C               	movwf	28	;volatile
   975  06FC  3081               	movlw	129
   976  06FD  009B               	movwf	27	;volatile
   977                           
   978                           ;./UART.h: 10:     RC1STAbits.SPEN = 1;
   979  06FE  179D               	bsf	29,7	;volatile
   980                           
   981                           ;./UART.h: 11:     TX1STAbits.TXEN = 1;
   982  06FF  169E               	bsf	30,5	;volatile
   983                           
   984                           ;./UART.h: 12:     RC1STAbits.CREN = 1;
   985  0700  161D               	bsf	29,4	;volatile
   986  0701                     l55:
   987  0701  0008               	return
   988  0702                     __end_of_UART_init:
   989                           
   990                           	psect	text3
   991  06E5                     __ptext3:	
   992 ;; *************** function _TMR2_Initialize *****************
   993 ;; Defined at:
   994 ;;		line 81 in file "main.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1008 ;;      Params:         0       0       0       0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0
  1011 ;;      Totals:         0       0       0       0       0       0       0       0
  1012 ;;Total ram usage:        0 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           
  1022                           ;psect for function _TMR2_Initialize
  1023  06E5                     _TMR2_Initialize:
  1024  06E5                     l676:	
  1025                           ;incstack = 0
  1026                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  1027                           
  1028                           
  1029                           ;main.c: 82:     T2CLKCON = 0x01;
  1030  06E5  3001               	movlw	1
  1031  06E6  0145               	movlb	5	; select bank5
  1032  06E7  0090               	movwf	16	;volatile
  1033  06E8                     l678:
  1034                           
  1035                           ;main.c: 83:     T2HLT = 0x00;
  1036  06E8  018F               	clrf	15	;volatile
  1037  06E9                     l680:
  1038                           
  1039                           ;main.c: 84:     T2RST = 0x00;
  1040  06E9  0191               	clrf	17	;volatile
  1041                           
  1042                           ;main.c: 85:     T2PR = 249;
  1043  06EA  30F9               	movlw	249
  1044  06EB  008D               	movwf	13	;volatile
  1045  06EC                     l682:
  1046                           
  1047                           ;main.c: 86:     T2TMR = 0x00;
  1048  06EC  018C               	clrf	12	;volatile
  1049  06ED                     l684:
  1050                           
  1051                           ;main.c: 87:     PIR1bits.TMR2IF = 0;
  1052  06ED  014E               	movlb	14	; select bank14
  1053  06EE  130D               	bcf	13,6	;volatile
  1054  06EF                     l686:
  1055                           
  1056                           ;main.c: 88:     T2CON = 0b10000000;
  1057  06EF  3080               	movlw	128
  1058  06F0  0145               	movlb	5	; select bank5
  1059  06F1  008E               	movwf	14	;volatile
  1060  06F2                     l87:
  1061  06F2  0008               	return
  1062  06F3                     __end_of_TMR2_Initialize:
  1063                           
  1064                           	psect	text4
  1065  0702                     __ptext4:	
  1066 ;; *************** function _PWM4_LoadDutyValue *****************
  1067 ;; Defined at:
  1068 ;;		line 97 in file "main.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  dutyValue       2    0[COMMON] unsigned short 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2, status,0
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1082 ;;      Params:         2       0       0       0       0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0       0       0       0
  1084 ;;      Temps:          2       0       0       0       0       0       0       0
  1085 ;;      Totals:         4       0       0       0       0       0       0       0
  1086 ;;Total ram usage:        4 bytes
  1087 ;; Hardware stack levels used: 1
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           
  1096                           ;psect for function _PWM4_LoadDutyValue
  1097  0702                     _PWM4_LoadDutyValue:
  1098  0702                     l848:	
  1099                           ;incstack = 0
  1100                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  1101                           
  1102                           
  1103                           ;main.c: 98:     PWM4DCH = (dutyValue & 0x03FC) >> 2;
  1104  0702  0877               	movf	PWM4_LoadDutyValue@dutyValue+1,w
  1105  0703  00F9               	movwf	??_PWM4_LoadDutyValue+1
  1106  0704  0876               	movf	PWM4_LoadDutyValue@dutyValue,w
  1107  0705  00F8               	movwf	??_PWM4_LoadDutyValue
  1108  0706  36F9               	lsrf	??_PWM4_LoadDutyValue+1,f
  1109  0707  0CF8               	rrf	??_PWM4_LoadDutyValue,f
  1110  0708  36F9               	lsrf	??_PWM4_LoadDutyValue+1,f
  1111  0709  0CF8               	rrf	??_PWM4_LoadDutyValue,f
  1112  070A  0878               	movf	??_PWM4_LoadDutyValue,w
  1113  070B  0146               	movlb	6	; select bank6
  1114  070C  0099               	movwf	25	;volatile
  1115                           
  1116                           ;main.c: 99:     PWM4DCL = (dutyValue & 0x0003) << 6;
  1117  070D  0876               	movf	PWM4_LoadDutyValue@dutyValue,w
  1118  070E  3903               	andlw	3
  1119  070F  00F8               	movwf	??_PWM4_LoadDutyValue
  1120  0710  3005               	movlw	5
  1121  0711                     u135:
  1122  0711  35F8               	lslf	??_PWM4_LoadDutyValue,f
  1123  0712  3EFF               	addlw	-1
  1124  0713  1D03               	skipz
  1125  0714  2F11               	goto	u135
  1126  0715  3578               	lslf	??_PWM4_LoadDutyValue,w
  1127  0716  0098               	movwf	24	;volatile
  1128  0717                     l93:
  1129  0717  0008               	return
  1130  0718                     __end_of_PWM4_LoadDutyValue:
  1131                           
  1132                           	psect	text5
  1133  06C7                     __ptext5:	
  1134 ;; *************** function _PWM4_Initialize *****************
  1135 ;; Defined at:
  1136 ;;		line 91 in file "main.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1150 ;;      Params:         0       0       0       0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _PWM4_Initialize
  1165  06C7                     _PWM4_Initialize:
  1166  06C7                     l688:	
  1167                           ;incstack = 0
  1168                           ; Regs used in _PWM4_Initialize: [wreg]
  1169                           
  1170                           
  1171                           ;main.c: 92:     PWM4CON = 0x90;
  1172  06C7  3090               	movlw	144
  1173  06C8  0146               	movlb	6	; select bank6
  1174  06C9  009A               	movwf	26	;volatile
  1175                           
  1176                           ;main.c: 93:     PWM4DCH = 0x3E;
  1177  06CA  303E               	movlw	62
  1178  06CB  0099               	movwf	25	;volatile
  1179                           
  1180                           ;main.c: 94:     PWM4DCL = 0x40;
  1181  06CC  3040               	movlw	64
  1182  06CD  0098               	movwf	24	;volatile
  1183  06CE                     l90:
  1184  06CE  0008               	return
  1185  06CF                     __end_of_PWM4_Initialize:
  1186                           
  1187                           	psect	text6
  1188  06D9                     __ptext6:	
  1189 ;; *************** function _PIN_MANAGER_Initialize *****************
  1190 ;; Defined at:
  1191 ;;		line 58 in file "main.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		status,2
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1205 ;;      Params:         0       0       0       0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0       0       0       0
  1208 ;;      Totals:         0       0       0       0       0       0       0       0
  1209 ;;Total ram usage:        0 bytes
  1210 ;; Hardware stack levels used: 1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           
  1219                           ;psect for function _PIN_MANAGER_Initialize
  1220  06D9                     _PIN_MANAGER_Initialize:
  1221  06D9                     l658:	
  1222                           ;incstack = 0
  1223                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  1224                           
  1225                           
  1226                           ;main.c: 60:     LATA = 0x00;
  1227  06D9  0140               	movlb	0	; select bank0
  1228  06DA  0198               	clrf	24	;volatile
  1229                           
  1230                           ;main.c: 61:     LATB = 0x00;
  1231  06DB  0199               	clrf	25	;volatile
  1232                           
  1233                           ;main.c: 62:     LATC = 0x00;
  1234  06DC  019A               	clrf	26	;volatile
  1235  06DD                     l660:
  1236                           
  1237                           ;main.c: 65:     TRISBbits.TRISB4 = 0;
  1238  06DD  1213               	bcf	19,4	;volatile
  1239  06DE                     l662:
  1240                           
  1241                           ;main.c: 66:     TRISBbits.TRISB6 = 0;
  1242  06DE  1313               	bcf	19,6	;volatile
  1243  06DF                     l664:
  1244                           
  1245                           ;main.c: 67:     TRISBbits.TRISB7 = 0;
  1246  06DF  1393               	bcf	19,7	;volatile
  1247  06E0                     l666:
  1248                           
  1249                           ;main.c: 68:     TRISCbits.TRISC4 = 0;
  1250  06E0  1214               	bcf	20,4	;volatile
  1251  06E1                     l668:
  1252                           
  1253                           ;main.c: 69:     TRISCbits.TRISC5 = 0;
  1254  06E1  1294               	bcf	20,5	;volatile
  1255  06E2                     l670:
  1256                           
  1257                           ;main.c: 70:     TRISCbits.TRISC6 = 0;
  1258  06E2  1314               	bcf	20,6	;volatile
  1259  06E3                     l672:
  1260                           
  1261                           ;main.c: 71:     TRISCbits.TRISC7 = 0;
  1262  06E3  1394               	bcf	20,7	;volatile
  1263  06E4                     l81:
  1264  06E4  0008               	return
  1265  06E5                     __end_of_PIN_MANAGER_Initialize:
  1266                           
  1267                           	psect	text7
  1268  06BC                     __ptext7:	
  1269 ;; *************** function _OSCILLATOR_Initialize *****************
  1270 ;; Defined at:
  1271 ;;		line 75 in file "main.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		status,2
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1285 ;;      Params:         0       0       0       0       0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0       0
  1288 ;;      Totals:         0       0       0       0       0       0       0       0
  1289 ;;Total ram usage:        0 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; This function calls:
  1292 ;;		Nothing
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           
  1299                           ;psect for function _OSCILLATOR_Initialize
  1300  06BC                     _OSCILLATOR_Initialize:
  1301  06BC                     l674:	
  1302                           ;incstack = 0
  1303                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  1304                           
  1305                           
  1306                           ;main.c: 76:     OSCEN = 0x00;
  1307  06BC  0151               	movlb	17	; select bank17
  1308  06BD  0191               	clrf	17	;volatile
  1309                           
  1310                           ;main.c: 77:     OSCFRQ = 0x00;
  1311  06BE  0193               	clrf	19	;volatile
  1312                           
  1313                           ;main.c: 78:     OSCTUNE = 0x00;
  1314  06BF  0192               	clrf	18	;volatile
  1315  06C0                     l84:
  1316  06C0  0008               	return
  1317  06C1                     __end_of_OSCILLATOR_Initialize:
  1318  007E                     btemp	set	126	;btemp
  1319  007E                     wtemp0	set	126
  1320                           
  1321                           	psect	config
  1322                           
  1323                           ;Config register CONFIG1 @ 0x8007
  1324                           ;	External Oscillator Mode Selection bits
  1325                           ;	FEXTOSC = OFF, Oscillator not enabled
  1326                           ;	Power-up Default Value for COSC bits
  1327                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  1328                           ;	Clock Out Enable bit
  1329                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  1330                           ;	VDD Range Analog Calibration Selection bit
  1331                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  1332  8007                     	org	32775
  1333  8007  3FED               	dw	16365
  1334                           
  1335                           ;Config register CONFIG2 @ 0x8008
  1336                           ;	Master Clear Enable bit
  1337                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  1338                           ;	Power-up Timer Selection bits
  1339                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1340                           ;	WDT Operating Mode bits
  1341                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  1342                           ;	Brown-out Reset Enable bits
  1343                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  1344                           ;	Brown-out Reset Voltage Selection bit
  1345                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  1346                           ;	PPSLOCKED One-Way Set Enable bit
  1347                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  1348                           ;	Stack Overflow/Underflow Reset Enable bit
  1349                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  1350  8008                     	org	32776
  1351  8008  3FE7               	dw	16359
  1352                           
  1353                           ;Config register CONFIG4 @ 0x800A
  1354                           ;	Boot Block Size Selection bits
  1355                           ;	BBSIZE = BB512, 512 words boot block size
  1356                           ;	Boot Block Enable bit
  1357                           ;	BBEN = OFF, Boot Block is disabled
  1358                           ;	SAF Enable bit
  1359                           ;	SAFEN = OFF, SAF is disabled
  1360                           ;	Application Block Write Protection bit
  1361                           ;	WRTAPP = OFF, Application Block is not write-protected
  1362                           ;	Boot Block Write Protection bit
  1363                           ;	WRTB = OFF, Boot Block is not write-protected
  1364                           ;	Configuration Registers Write Protection bit
  1365                           ;	WRTC = OFF, Configuration Registers are not write-protected
  1366                           ;	Storage Area Flash (SAF) Write Protection bit
  1367                           ;	WRTSAF = OFF, SAF is not write-protected
  1368                           ;	Low Voltage Programming Enable bit
  1369                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  1370  800A                     	org	32778
  1371  800A  3FFF               	dw	16383
  1372                           
  1373                           ;Config register CONFIG5 @ 0x800B
  1374                           ;	User Program Flash Memory Code Protection bit
  1375                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  1376  800B                     	org	32779
  1377  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM4_LoadDutyValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     829
                                              4 COMMON     2     2      0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                 _PWM4_LoadDutyValue
                    _TMR2_Initialize
                          _UART_init
                          _UART_read
 ---------------------------------------------------------------------------------
 (1) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM4_LoadDutyValue                                   4     2      2     652
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize
   _PWM4_Initialize
   _PWM4_LoadDutyValue
   _TMR2_Initialize
   _UART_init
   _UART_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       C      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 24 21:54:56 2021

                             l55 0701                               l81 06E4                               l90 06CE  
                             l59 06D8                               l84 06C0                               l93 0717  
                             l87 06F2                               u10 06D4                               u11 06D3  
                            l108 07EA                              l642 06F3                              l660 06DD  
                            l652 06D7                              l644 06CF                              l900 0769  
                            l670 06E2                              l662 06DE                              l646 06D4  
                            l902 076A                              l910 076F                              l672 06E3  
                            l664 06DF                              l680 06E9                              l920 0780  
                            l912 0775                              l904 076B                              l674 06BC  
                            l666 06E0                              l658 06D9                              l682 06EC  
                            l930 078B                              l922 0781                              l914 077C  
                            l906 076C                              l850 0718                              l668 06E1  
                            l684 06ED                              l676 06E5                              l940 0797  
                            l932 0792                              l924 0782                              l916 077E  
                            l908 076D                              l860 073A                              l852 071E  
                            l686 06EF                              l678 06E8                              l950 07A8  
                            l942 0798                              l934 0794                              l926 0783  
                            l918 077F                              l870 0740                              l862 073C  
                            l854 0721                              l688 06C7                              l848 0702  
                            l960 07AE                              l952 07AA                              l944 0799  
                            l936 0795                              l928 0785                              l880 0752  
                            l872 0741                              l864 073D                              l856 0727  
                            l970 07C0                              l962 07AF                              l954 07AB  
                            l938 0796                              l946 079B                              l890 0757  
                            l882 0753                              l866 073E                              l858 0733  
                            l874 0743                              l980 07C5                              l972 07C1  
                            l956 07AC                              l948 07A1                              l964 07B1  
                            l884 0754                              l876 0749                              l892 0759  
                            l868 073F                              l990 07D7                              l974 07C2  
                            l966 07B7                              l982 07C7                              l958 07AD  
                            l894 075F                              l886 0755                              l878 0750  
                            l992 07DF                              l984 07CD                              l976 07C3  
                            l968 07BE                              l896 0766                              l888 0756  
                            l994 07E1                              l986 07D4                              l978 07C4  
                            l898 0768                              l996 07E2                              l988 07D6  
                            u200 07B7                              u201 07B6                              u210 07CD  
                            u211 07CC                              u140 0733                              u141 0732  
                            u150 0749                              u135 0711                              u151 0748  
                            u160 075F                              u161 075E                              u170 0775  
                            u227 07DA                              u171 0774                              u180 078B  
                            u237 07E5                              u181 078A                              u190 07A1  
                            u191 07A0                  _TMR2_Initialize 06E5                  _PWM4_Initialize 06C7  
                            wreg 0009                      main@dato_rx 007B                             _LATA 0018  
                           _LATB 0019                             _LATC 001A                             _T2PR 028D  
                           _main 0718                             fsr0h 0005                             fsr0l 0004  
                           btemp 007E                             start 0002   __size_of_OSCILLATOR_Initialize 0005  
  __end_of_OSCILLATOR_Initialize 06C1                            ?_main 0076                            _T2CON 028E  
                          _T2HLT 028F                            _T2TMR 028C                            _T2RST 0291  
                          _OSCEN 0891               _PWM4_LoadDutyValue 0702               __size_of_UART_init 000F  
             __size_of_UART_read 000A              ?_PWM4_LoadDutyValue 0076                            status 0003  
                          wtemp0 007E                  __initialization 07ED                     __end_of_main 07ED  
           ??_PWM4_LoadDutyValue 0078          __end_of_PWM4_Initialize 06CF          __end_of_TMR2_Initialize 06F3  
                         ??_main 007A                           _RC1REG 0119                           _SP1BRG 011B  
                         _OSCFRQ 0893                           _TX1REG 011A                __end_of_UART_init 0702  
              __end_of_UART_read 06D9                     __pdataCOMMON 0070          __end_of__initialization 07FD  
                 __pcstackCOMMON 0076                 ?_PWM4_Initialize 0076                 ?_TMR2_Initialize 0076  
    PWM4_LoadDutyValue@dutyValue 0076                       __pmaintext 0718                          _OSCTUNE 0892  
                        _PWM4DCH 0319                          _PWM4DCL 0318                          _PWM4CON 031A  
                        __ptext1 06CF                          __ptext2 06F3                          __ptext3 06E5  
                        __ptext4 0702                          __ptext5 06C7                          __ptext6 06D9  
                        __ptext7 06BC            _OSCILLATOR_Initialize 06BC         ??_PIN_MANAGER_Initialize 0076  
           end_of_initialization 07FD      __size_of_PWM4_LoadDutyValue 0016                        _PORTBbits 000D  
                      _UART_init 06F3                        _UART_read 06CF                        _PORTCbits 000E  
                      _TRISBbits 0013                        _TRISCbits 0014                    __pidataCOMMON 06C1  
                     ?_UART_init 0076                       ?_UART_read 0076           ?_OSCILLATOR_Initialize 0076  
            start_initialization 07ED  __size_of_PIN_MANAGER_Initialize 000C                        ___latbits 0001  
       __size_of_PWM4_Initialize 0008         __size_of_TMR2_Initialize 000E                     _dutyCycle100 0070  
         _PIN_MANAGER_Initialize 06D9                      ??_UART_init 0076                      ??_UART_read 0076  
                       _T2CLKCON 0290                         _PIR1bits 070D                ??_PWM4_Initialize 0076  
              ??_TMR2_Initialize 0076       __end_of_PWM4_LoadDutyValue 0718          ??_OSCILLATOR_Initialize 0076  
                    _dutyCycle50 0074                      _dutyCycle75 0072                    __size_of_main 00D5  
                     _RC1STAbits 011D          ?_PIN_MANAGER_Initialize 0076                       _TX1STAbits 011E  
 __end_of_PIN_MANAGER_Initialize 06E5  
